# configs/sim.yaml
filters:
  path: "data/binance_filters.json"
  enforce_percent_price_by_side: true
  strict: true

fees:
  path: null                     # Путь к JSON/YAML с ставками по символам; null → использовать data/fees/fees_by_symbol.json.
  refresh_days: null             # Каденс проверки устаревания таблицы (в днях); null отключает проверку (по умолчанию).
  maker_bps: 1.0                 # Базовая ставка мейкера в bps, когда нет записей в таблице (дефолт 1.0).
  taker_bps: 5.0                 # Базовая ставка тейкера в bps, когда нет записей в таблице (дефолт 5.0).
  use_bnb_discount: false        # Применять ли VIP-скидки Binance/BNB; false → множители остаются 1.0 (дефолт).
  maker_discount_mult: 1.0       # Принудительный множитель скидки мейкера; null → авто (1.0 или 0.75 при скидке).
  taker_discount_mult: 1.0       # Принудительный множитель скидки тейкера; null → авто (1.0 или 0.75 при скидке).
  vip_tier: null                 # Номер VIP-уровня (int) для табличных ставок; null → использовать значения по умолчанию.
  maker_share_default: null      # Override базовой доли maker [0..1]; null → использовать 0.5 из блока maker_taker_share.
  spread_cost_maker_bps: null    # Override доп. издержек maker (bps) при разделении потока; null → 0.0 по умолчанию.
  spread_cost_taker_bps: null    # Override доп. издержек taker (bps) при разделении потока; null → 0.0 по умолчанию.
  taker_fee_override_bps: null   # Жёсткий override тейкерской комиссии (bps) после скидок; null → без override.
  rounding:
    enabled: true               # Включить округление комиссий; false → возвращать сырые значения без пост-обработки.
    step: null                  # Override шага округления (например 0.0001); null → использовать commission_step из фильтров/таблицы.
    mode: "up"                 # Режим относительно шага: up (ceil, дефолт Binance) | nearest | down.
    minimum_fee: null           # Минимальная комиссия после округления; null → без нижней границы.
    maximum_fee: null           # Максимальная комиссия после округления; null → без верхней границы.
  settlement:
    enabled: false              # Платить комиссии альтернативным активом (например, BNB); false → оставаться в котируемой валюте.
    mode: null                  # Жёсткий режим расчёта (bnb/quote/auto); null → авто по аккаунту или таблице комиссий.
    currency: null              # Код валюты расчёта (например, "BNB"); null → использовать mode/значения биржи.
    prefer_discount_asset: false  # true → запрашивать скидочную валюту при доступности; false → без приоритета.
  maker_taker_share:
    enabled: false               # Включить расчёт доли maker/taker; false → использовать maker_share_default.
    mode: "fixed"                # Режим: fixed | model | predictor; fixed → всегда брать maker_share_default.
    maker_share_default: 0.5     # Базовая доля maker, когда модель неактивна/нет фичей (дефолт 0.5).
    spread_cost_maker_bps: 0.0   # Доп. издержки maker (bps) сверх комиссии при активном разделе потока.
    spread_cost_taker_bps: 0.0   # Доп. издержки taker (bps) сверх комиссии при активном разделе потока.
    taker_fee_override_bps: null # Опциональный override тейкерской комиссии (bps) в активном режиме.
    model:
      distance_to_mid: null      # Фича distance-to-mid в bps или блок {value,min,max,fallback}; null → не используется.
      latency: null              # Фича latency в мс или блок {value,min,max,fallback}; null → не используется.
      coefficients: {}           # Линейные коэффициенты модели (intercept, distance_to_mid, latency, …); пусто = дефолт.

funding:
  enabled: false
  rate_source: "const"
  const_rate_per_interval: 0.0
  interval_seconds: 28800
  align_to_epoch: true
  curve: {}

slippage:
  k: 0.8
  min_half_spread_bps: 0.0
  default_spread_bps: 2.0
  eps: 1.0e-12

execution:
  algo: "TWAP"
  notional_threshold: 10000.0
  large_order_algo: TWAP
  twap:
    parts: 6
    child_interval_s: 600
  pov:
    participation: 0.10
    child_interval_s: 60
    min_child_notional: 20.0

latency:
  base_ms: 250
  jitter_ms: 50
  spike_p: 0.01
  spike_mult: 5.0
  timeout_ms: 2500
  retries: 1
  seed: 0

pnl:
  mark_to: "side"   # "side" = для лонга bid, для шорта ask; также поддерживаются "mid", "bid", "ask"

leakguard:
  decision_delay_ms: 0
  min_lookback_ms: 0

labels:
  horizon_ms: 60000
  price_col: "price"
  returns: "log"

risk:
  enabled: true
  max_abs_position_qty: 0.0
  max_abs_position_notional: 0.0
  max_order_notional: 0.0
  max_orders_per_min: 60
  max_orders_window_s: 60
  daily_loss_limit: 0.0
  pause_seconds_on_violation: 300
  daily_reset_utc_hour: 0  # Час начала нового дня в UTC для PnL и дневных лимитов
  max_entries_per_day: null  # Максимум новых входов за день; null/-1 = без лимита (счёт по daily_reset_utc_hour, UTC)

logging:
  enabled: true
  format: "csv"                 # "csv" | "parquet"
  trades_path: "logs/log_trades_<runid>.csv"
  reports_path: "logs/report_equity_<runid>.csv"
  flush_every: 1000

policy:
  module: "strategies.momentum"
  class: "MomentumStrategy"
  params:
    lookback: 5
    enter_threshold: 0.0  # enter >= exit; falls back to legacy ``threshold`` when set
    exit_threshold: 0.0   # exit hysteresis threshold; uses ``threshold`` as fallback
    order_qty: 0.1  # доля позиции
